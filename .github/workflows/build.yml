name: GitHub Automatic Build

on:
  push:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag'
        required: false
      prerelease:
        description: 'Prerelease'
        required: true
        default: 'false' 
        type: choice
        options:
          - true
          - false

jobs:
  omega:
    name: Omega-${{ matrix.device }}-${{ matrix.arch }}
    runs-on: ubuntu-24.04
    continue-on-error: true
    strategy:
      matrix:
        include:
          - device: "Amlogic-ng"
            arch: arm
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install rdfind gcc make git unzip wget xz-utils bc gperf zip unzip g++ xsltproc xfonts-utils patchutils lzop libxml-parser-perl libparse-yapp-perl rename jq
      - name: Download the CoreELEC
        run: git clone https://github.com/zainkamal95/CoreELEC
      - name: CoreELEC release tags checkout
        run: |
          cd CoreELEC
          git checkout coreelec-21
      - name: adding sources for download errors...
        run: |
          if [ -d ${{ github.workspace }}/.github/sources ] && [ ! -d ${{ github.workspace }}/CoreELEC/sources ]; then
            ln -s ${{ github.workspace }}/.github/sources ${{ github.workspace }}/CoreELEC/sources
          fi
      - name: Building addons
        run: cd ${{ github.workspace }}/CoreELEC && ARCH=${{ matrix.arch }} PROJECT=Amlogic-ce DEVICE=${{ matrix.device }} scripts/create_addon tvheadend43
      - name: Upload target
        uses: actions/upload-artifact@v4
        id: upload-artifact
        continue-on-error: true
        with:
          name: Omega-${{ matrix.device }}-${{ matrix.arch }}-target
          path: ${{ github.workspace }}/CoreELEC/target/
          if-no-files-found: error

  release:
    needs: [ omega ]
    strategy:
      fail-fast: false
    name: Releases
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.tag && github.event.inputs.prerelease == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Download target
        uses: actions/download-artifact@v4
        with:
          name: target
          path: ${{ github.workspace }}/target
      - name: Generate release tag
        run: |
          if [ ${{ github.event_name }} == 'push' ]; then
             echo "release_tag=${GITHUB_REF#refs/heads/}-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV
             echo "prerelease=false" >> $GITHUB_ENV
          else
             echo "release_tag=$(echo "${{ github.event.inputs.tag }}" | sed 's/[^A-Z,a-z,0-9]/-/g')" >> $GITHUB_ENV
             if [ ${{ github.event.inputs.prerelease }} == 'true' ]; then
                echo "prerelease=true" >> $GITHUB_ENV
             else
                echo "prerelease=false" >> $GITHUB_ENV
             fi
          fi
      - name: Releases
        uses: softprops/action-gh-release@v1
        with:
          name: "GitHub Build"
          tag_name: ${{ env.release_tag }}
          prerelease: ${{ env.prerelease }}
          files: ${{ github.workspace }}/target/*/*/*/*/*/*.zip*

      - name: Upload combined target
        uses: actions/upload-artifact@v4
        with:
          name: combined-target
          path: ${{ github.workspace }}/target
          
